import torch
from torch import Tensor

from product_classifier.config import ConfigModel
from product_classifier.dataset.data_processing.transform_image import transform_image, base64_image_to_tensor


def test_transform_image_resizes():
    start_image = torch.zeros(3, 120, 110, dtype=torch.float)
 # hello
    transformed_image = transform_image(start_image)

    assert transformed_image.shape == (3, ConfigModel.image_width, ConfigModel.image_height)


def test_base64_image_to_tensor():
    base64_image = "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"

    tensor_image = base64_image_to_tensor(base64_image)

    assert isinstance(tensor_image, Tensor)
